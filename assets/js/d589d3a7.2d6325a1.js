"use strict";(self.webpackChunkshuffle_docs=self.webpackChunkshuffle_docs||[]).push([[924],{605:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"getting-started","title":"Getting started","description":"HTML markup","source":"@site/docs/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/Shuffle/docs/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/Vestride/Shuffle/tree/main/apps/website/docs/docs/getting-started.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/Shuffle/docs/install"},"next":{"title":"How column widths work","permalink":"/Shuffle/docs/column-widths"}}');var r=n(1085),s=n(1184);const a={sidebar_position:2},o="Getting started",c={},l=[{value:"HTML markup",id:"html-markup",level:2},{value:"JavaScript",id:"javascript",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,r.jsx)(t.h2,{id:"html-markup",children:"HTML markup"}),"\n",(0,r.jsx)(t.p,{children:"Shuffle operates on a group of items, giving you the ability to filter or sort them."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:'<div id="photo-gallery">\n  <div class="picture-item">\u2026</div>\n  <div class="picture-item">\u2026</div>\n  <div class="picture-item">\u2026</div>\n  <div class="picture-item">\u2026</div>\n</div>\n'})}),"\n",(0,r.jsxs)(t.p,{children:["The easiest way to use Shuffle is to add a ",(0,r.jsx)(t.code,{children:"data-groups"})," attribute to each of the items in your grid as a ",(0,r.jsx)(t.a,{href:"http://jsonlint.com/",children:"valid JSON"})," array of strings."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:'\x3c!-- highlight-next-line --\x3e\n<figure class="picture-item" data-groups=\'["nature","city"]\'>\n  <img src="central-park.jpg" alt="Aerial view of Central Park" />\n  <figcaption>Looking down on central park and the surrounding builds from the Rockefellar Center</figcaption>\n</figure>\n'})}),"\n",(0,r.jsxs)(t.p,{children:["Alternatively, you can set the ",(0,r.jsx)(t.code,{children:"delimiter"})," option to a comma (",(0,r.jsx)(t.code,{children:"delimiter: ','"}),") and the ",(0,r.jsx)(t.code,{children:"data-groups"})," attribute will be ",(0,r.jsx)(t.code,{children:"split"})," on that character."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:'\x3c!-- highlight-next-line --\x3e\n<figure class="picture-item" data-groups="nature,city">\n  <img src="central-park.jpg" alt="Aerial view of Central Park" />\n  <figcaption>Looking down on central park and the surrounding builds from the Rockefellar Center</figcaption>\n</figure>\n'})}),"\n",(0,r.jsxs)(t.p,{children:["If you were using Bootstrap v4 grids, you could use the ",(0,r.jsx)(t.code,{children:"col-*"})," classes like this."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-html",children:'<div class="row" id="photo-gallery">\n  <figure class="col-3 picture-item" data-groups=\'["animal"]\'>\n    <div class="aspect">\n      <img src="crocodile.jpg" alt="A close, profile view of a crocodile looking directly into the camera" />\n    </div>\n    <figcaption>Crocodile</figcaption>\n  </figure>\n  <figure class="col-3 picture-item" data-groups=\'["city"]\'>\n    <div class="aspect">\n      <img src="crossroads.jpg" alt="A multi-level highway stack interchange in Puxi, Shanghai" />\n    </div>\n    <figcaption>Crossroads</figcaption>\n  </figure>\n  <figure class="col-3 picture-item" data-groups=\'["nature","city"]\'>\n    <div class="aspect">\n      <img\n        src="central-park.jpg"\n        alt="Looking down on central park and the surrounding builds from the Rockefellar Center"\n      />\n    </div>\n    <figcaption>Central Park</figcaption>\n  </figure>\n  <div class="col-1 js-shuffle-sizer"></div>\n</div>\n'})}),"\n",(0,r.jsx)(t.h2,{id:"javascript",children:"JavaScript"}),"\n",(0,r.jsx)(t.p,{children:"Once the markup is ready, initialize Shuffle by giving it the container element and an optional options object."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"const Shuffle = window.Shuffle; // Assumes you're using the UMD version of Shuffle (for example, from unpkg.com).\nconst element = document.getElementById('photo-gallery');\nconst sizer = element.querySelector('.js-shuffle-sizer');\n\nconst shuffleInstance = new Shuffle(element, {\n  itemSelector: '.picture-item',\n  sizer: sizer, // could also be a selector: '.js-shuffle-sizer'\n});\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(4041);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);