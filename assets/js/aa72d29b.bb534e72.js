"use strict";(self.webpackChunkshuffle_docs=self.webpackChunkshuffle_docs||[]).push([[789],{5528:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"custom-styles","title":"Custom styles","description":"You can customize the default styles which are applied to Shuffle items upon initialization, before layout, after layout, before hiding, and after hidden.","source":"@site/docs/custom-styles.md","sourceDirName":".","slug":"/custom-styles","permalink":"/Shuffle/docs/custom-styles","draft":false,"unlisted":false,"editUrl":"https://github.com/Vestride/Shuffle/tree/main/apps/website/docs/docs/custom-styles.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"tutorialSidebar","previous":{"title":"API","permalink":"/Shuffle/docs/api"},"next":{"title":"Alternatives","permalink":"/Shuffle/docs/alternatives"}}');var i=n(1085),o=n(1184);const l={sidebar_position:11},r="Custom styles",a={},c=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"custom-styles",children:"Custom styles"})}),"\n",(0,i.jsx)(t.p,{children:"You can customize the default styles which are applied to Shuffle items upon initialization, before layout, after layout, before hiding, and after hidden."}),"\n",(0,i.jsx)(t.p,{children:"Here are the defaults:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"ShuffleItem.Css = {\n  INITIAL: {\n    position: 'absolute',\n    top: 0,\n    visibility: 'visible',\n    willChange: 'transform',\n  },\n  DIRECTION: {\n    ltr: {\n      left: 0,\n    },\n    rtl: {\n      right: 0,\n    },\n  },\n  VISIBLE: {\n    before: {\n      opacity: 1,\n      visibility: 'visible',\n    },\n    after: {\n      transitionDelay: '',\n    },\n  },\n  HIDDEN: {\n    before: {\n      opacity: 0,\n    },\n    after: {\n      visibility: 'hidden',\n      transitionDelay: '',\n    },\n  },\n};\n\nShuffleItem.Scale = {\n  VISIBLE: 1,\n  HIDDEN: 0.001,\n};\n"})}),"\n",(0,i.jsx)(t.p,{children:"If you wanted to add a 50% red background to every item when they initialize, you could do this:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"Shuffle.ShuffleItem.Css.INITIAL.backgroundColor = 'rgba(255, 0, 0, 0.5)';\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To set the text color to ",(0,i.jsx)(t.code,{children:"teal"})," after the item has finished moving:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"Shuffle.ShuffleItem.Css.VISIBLE.after.color = 'teal';\n"})}),"\n",(0,i.jsx)(t.p,{children:"You can also customize the scaling effect with visible or hidden items."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"Shuffle.ShuffleItem.Scale.HIDDEN = 0.5;\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var s=n(4041);const i={},o=s.createContext(i);function l(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);